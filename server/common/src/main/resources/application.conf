# Environment variables:
#
#   APP_ADDR          - IP Address for our host (here we need to ensure the Weave NIC is used!)
#   ETCD_URL          - URL pointing to our compute nodes etcd service
#Â   JOURNAL           - IP Address for our Cassandra journal node
#   SNAPSHOT          - IP Address for our Cassandra snapshot node
#   KAFKA_BROKER_LIST - List of Kafka brokers host1:port1,host2:port2,...

# Logging knobs - twiddle to set appropriately
logging {
  level = INFO

  # Log dead letters
  dead-letters = on

  # Log all LoggingFSMs for events, transitions and timers (using akka.actor.LoggingFSM[StateType, Data])
  fsm = on

  # Logging of message invocations on certain (local) actors (using akka.event.LoggingReceive)
  receive = on

  # Log unhandled actor messages
  unhandled = on

  # Log cluster informational messages
  cluster = on

  # Log all inbound and outbound messages to remote actors
  remote = off
}

akka {
  loglevel = ${logging.level}
  log-dead-letters = ${logging.dead-letters}

  extensions = ["akka.contrib.pattern.ClusterReceptionistExtension", "akka.contrib.pattern.DistributedPubSubExtension"]

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      fsm = ${logging.fsm}
      receive = ${logging.receive}
      unhandled = ${logging.unhandled}
    }
  }

  remote {
    log-sent-messages = ${logging.remote}
    log-received-messages = ${logging.remote}
    log-remote-lifecycle-events = ${logging.remote}
    netty.tcp {
      hostname = ${?APP_ADDR}
      port = 2552
    }
  }

  cluster {
    log-info = ${logging.cluster}
    auto-down-unreachable-after = 10s # FIXME: should we really be auto-downing?
    retry = 10s
    min-nr-of-members = 2
  }

  persistence {
    journal.plugin = "cassandra-journal"
    snapshot-store.plugin = "cassandra-snapshot-store"
  }

  contrib.cluster.inventory {
    root-key = "/system/frontent.cluster.nodes"
    plugin = "etcd"
    etcd {
      url = ${?ETCD_URL}
    }
  }
}

cassandra-journal {
  contact-points = [ ${?JOURNAL} ]
}

cassandra-snapshot-store {
  contact-points = [ ${?SNAPSHOT} ]
}

kafka {
  producer {
    message.send.max.retries = 3
    metadata.broker.list = ${?KAFKA_BROKER_LIST}
    connect.timeout.ms = 500
    producer.type = "async"
    topic = "test"
  }
}